.\" vim:filetype=groff
.TH pqiv 1 "04 November 2013" "" "pqiv manual"
.SH NAME
pqiv \- quick image viewer
.SH SYNOPSIS
.B "pqiv" [options] <file(s) or folder(s)>
.SH DESCRIPTION
pqiv is a simple image viewer inspired by qiv.
.SH OPTIONS
.TP
.B -a, --keyboard-alias=nf
Define n as a keyboard alias for f. For example, `-a af' will give you
fullscreen with the `a' key. Multiple aliases can be set by concatenating them
to the option's value: `-a afwa' will make `a' toggle fullscreen and `w' create a
link to the current image.
.TP
.B -c, --transparent-background
Borderless transparent window. Click on the window to show the window borders,
click again to hide them.  This will only work in compositing window managers.
.TP
.B -d, --slideshow-interval=n
Set the interval for the slideshow mode
.TP
.B -f, --fullscreen
Start in fullscreen mode
.TP
.B -F, --fade
Fade between images
.TP
.B --fade-duration=n
Set how long pqiv should fade between images. Defaults to 0.5 seconds.
.TP
.B -i, --hide-info-box
Initially hide the info box
.TP
.B -l, --lazy-load
Create the image list in a background thread and display the main window as
soon as one image has been found. New images will be added as they are found.
When combining this with the
.I --sort
or
.I --shuffle
options, keep in mind that the first image found will be displayed, though it
might end up not being the first one in the final file list. As with the
.I --watch-directories
option, the info box does not automatically update when new images are added.
.TP
.B -n, --sort
Sort files in natural order
.TP
.B -P, --window-position=POSITION
Set initial window position. Use `x,y' to position the window at the specific
coordinates, or `off' to not position the window at all. The default behavior
is to center the window.
.TP
.B -r, --additional-from-stdin
Read additional filenames/folders from stdin
.TP
.B -R, --reverse-cursor-keys
Reverse the meaning of the cursor keys
.TP
.B -s, --slideshow
Initially activate slideshow mode
.TP
.B -t, --scale-images-up
Scale images up to fill the whole screen
.TP
.B -T, --window-title=TITLE
Set the title of the window. You have some variables available:

.po 7

.TP
.I $BASEFILENAME
The base file name of the current file (e.g. `image.png')

.TP
.I $FILENAME
The file name of the current file (e.g. `/home/user/image.png')

.TP
.I $WIDTH
The width of the current image in pixels

.TP
.I $HEIGHT
The height of the current image in pixels

.TP
.I $ZOOM
The current zoom level

.TP
.I $IMAGE_NUMBER
The index of the current image

.TP
.I $IMAGE_COUNT
The total numer of images

.po 0

The default is `pqiv: $FILENAME ($WIDTHx$HEIGHT) $ZOOM% [$IMAGE_NUMBER/$IMAGE_COUNT]'

.TP
.B -z, --zoom-level=FLOAT
Set initial zoom level as a floating point number (1.0 is 100%)
.TP
.B -1, --command-1=COMMAND
Bind the external COMMAND to key 1. Likewise, you can use -2 to -9 for those keys.
Extended usage:

.po 7

.TP
.I Show command output in a window
Prefix the command with 
.RI `>'
to display it's output in an overlay window.

.TP
.I Pipe the image through a filter
Prefix the command with 
.RI `|' 
to write the image to the program's stdin and read an image from its stdout.
The output is not cached, so reloading the image will revert to the old state.

.po 0

.TP
.B --disable-scaling
Disable scaling of images
.TP
.B --low-memory
Try to avoid memory hungry operations: Do not preload the next image, do not
keep a scaled image in memory for faster redraw operations, etc.
.TP
.B --shuffle
Shuffle files
.TP
.B --watch-directories
Watch directories (given on the command line) for new images and add them as
they appear. Note that the yellow info box does not update automatically, but
only when the window needs to be redrawn anyway. This option uses GIO's
GFileMonitor internally. Depending on which system you use, GIO might internally
poll regularly for changes, i.e. create some load. (In Linux, inotify is used.)

.PP
You can use the file
.RI ~/.pqivrc
to make any of these default. The file's syntax is (mostly) those of desktop-files. Create a section
.I options
and use the long option names for the key names. For example,

.po 5

[options]
.br
fullscreen=1
.br
slideshow-interval=5

.po 0

would be a valid configuration file. If you set any boolean option in the
configuration file, its meaning on the command line will be inverted. So with
the above example file,
.I -f
would make pqiv start in window mode.
The old syntax from pqiv <= 1.0, where the file was prepended to the argument
vector, is still supported as well. So you can also just store
.I -f -n 5
in the file to achieve the same effect.

Please note that while the use of flags in the configuration file inverts their
meaning on the command line, the same does not apply to double use of flags. In
old versions of pqiv,
.I -ff
would do nothing. This is no longer the case, it will now fullscreen the application.

.PP
pqiv will display all files you specified on the command line. Directories will
be searched recursively for files supported by gtk+
(for example: bmp, gif, jpeg, png, wbmp, xpm, svg). The special file
.B -
will cause pqiv to read a file from stdin.

.SH USAGE
In pqiv, you can use both mouse and keyboard to navigate through the images. Execute
.B "pqiv" -h
to get more information on the key bindings.

.SH AUTHOR
.nf
Phillip Berndt (mail at pberndt dot com)
.nf
